import os
import sys
import importlib

print("üöÄ Setting up Django for Behave tests...")

# 1Ô∏è‚É£ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º DJANGO_SETTINGS_MODULE
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')

# 2Ô∏è‚É£ –ü–∞—Ç—á–∏–º —Ç–≤–æ–π –∫–∞—Å—Ç–æ–º–Ω—ã–π –∫–ª–∞—Å—Å User –¥–æ –∑–∞–≥—Ä—É–∑–∫–∏ Django
#    (–Ω—É–∂–Ω–æ –ø–æ–¥—Å—Ç–∞–≤–∏—Ç—å —Ç–æ—á–Ω—ã–π –ø—É—Ç—å –¥–æ —Ç–≤–æ–µ–π –º–æ–¥–µ–ª–∏)
try:
    # –ü—Ä–æ–±—É–µ–º –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –º–æ–¥—É–ª—å —Å –º–æ–¥–µ–ª—å—é
    user_module = importlib.import_module("authentication.models")

    # –ë–µ—Ä–µ–º —Å–∞–º –∫–ª–∞—Å—Å User
    User = getattr(user_module, "User", None)

    # –ï—Å–ª–∏ –∞—Ç—Ä–∏–±—É—Ç–∞ ROLE_CHOICES –Ω–µ—Ç ‚Äî –¥–æ–±–∞–≤–ª—è–µ–º
    if User and not hasattr(User, "ROLE_CHOICES"):
        print("‚öôÔ∏è Injecting ROLE_CHOICES into custom User model...")
        User.ROLE_CHOICES = [
            ("student", "Student"),
            ("teacher", "Teacher"),
            ("admin", "Admin"),
        ]
        print("‚úÖ ROLE_CHOICES successfully injected.")
except Exception as e:
    print(f"‚ö†Ô∏è Could not inject ROLE_CHOICES early: {e}")

# 3Ô∏è‚É£ –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å Django
import django
django.setup()

print("‚úÖ Django successfully initialized for Behave tests.")

def before_all(context):
    pass
